@page "/pricing"
@inject HttpClient Http

<PageTitle>@data?.title</PageTitle>

<MudAnimate Selector="._fadeIn1" Duration="1" AnimationType="AnimationType.Fade" Value="1" IterationCount="1" Delay="0.25" AnimationTiming="AnimationTiming.Ease" AnimationDirection="AnimationDirection.Normal" AnimationFillMode="AnimationFillMode.Forwards" />
<MudAnimate Selector="._fadeIn2" Duration="1" AnimationType="AnimationType.Fade" Value="1" IterationCount="1" Delay="0.5" AnimationTiming="AnimationTiming.Ease" AnimationDirection="AnimationDirection.Normal" AnimationFillMode="AnimationFillMode.Forwards" />

@for (int i = 3; i <= 7; i++)
{
    <MudAnimate Selector="@($"._fadeIn{i}")"
                Duration="1"
                AnimationType="AnimationType.Fade"
                Value="1"
                IterationCount="1"
                Delay="@(i * 0.25)"
                AnimationTiming="AnimationTiming.Ease"
                AnimationDirection="AnimationDirection.Normal"
                AnimationFillMode="AnimationFillMode.Forwards" />
}

<MudContainer>
    <MudText Align="Align.Center" Class="_fadeIn1" Style="font-size: calc(2vw + 2vh); opacity: 0;" GutterBottom="true">@data?.title</MudText>
    <MudText Align="Align.Center" Class="_fadeIn2" Style="font-size: calc(1vw + 1vh); opacity: 0;">@data?.desc</MudText>
    <MudGrid Class="mt-8 mb-8">
        @foreach (var item in blocks.Select((b, i) => new { block = b, index = i }))
        {
            <MudItem xs="12" sm="6" md="4" Class="@($"_fadeIn{item.index + 3}")" Style="opacity: 0;">
                <MudCard Elevation="25" Class="pb-4">
                    <MudCardHeader Class="overflow-hidden">
                        <CardHeaderContent>
                            <MudText Align="Align.Center" Style="font-size: calc(1.25vw + 1.25vh);">@item.block.name</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Class="overflow-hidden">
                        <div class="d-flex justify-center">
                            <MudText Style="font-size: calc(1vw + 1.5vh);">@item.block.price</MudText>
                            <MudText Style="font-size: calc(1vw + 1.5vh);" Class="ml-1" Color="Color.Primary">/@item.block.duration</MudText>
                        </div>
                        <div class="mt-3">
                            @foreach (var feature in item.block.features)
                            {
                                <MudText Align="Align.Center" Style="font-size: calc(1vw + 1vh);">@feature</MudText>
                            }
                        </div>
                    </MudCardContent>
                    <MudCardActions Class="overflow-hidden d-flex justify-center">
                        <MudButton Href="@item.block.action.href" Variant="Variant.Filled" Color="Color.Primary">@item.block.action.name</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@code {
    private Json? data;
    private List<Block> blocks = new();

    protected override async Task OnInitializedAsync()
    {
        data = await Http.GetFromJsonAsync<Json>("json/pricing.json");
        if (data != null)
        {
            blocks = new List<Block>
            {
                Create(data.text.first),
                Create(data.text.second),
                Create(data.text.third),
                Create(data.text.fourth),
                Create(data.text.fifth),
            };
        }
    }

    private Block Create(Block data)
    {
        return new Block
            {
                name = data.name,
                price = data.price,
                duration = data.duration,
                features = data.features,
                action = data.action
            };
    }

    public class Json
    {
        public string title { get; set; } = string.Empty;
        public string desc { get; set; } = string.Empty;
        public TextData text { get; set; } = new TextData();
    }

    public class TextData
    {
        public Block first { get; set; } = new Block();
        public Block second { get; set; } = new Block();
        public Block third { get; set; } = new Block();
        public Block fourth { get; set; } = new Block();
        public Block fifth { get; set; } = new Block();
    }

    public class Block
    {
        public string name { get; set; } = string.Empty;
        public string price { get; set; } = string.Empty;
        public string duration { get; set; } = string.Empty;
        public List<string> features { get; set; } = new List<string>();
        public Action action { get; set; } = new Action();
        public string animationClass { get; set; } = string.Empty;
    }

    public class Action
    {
        public string name { get; set; } = string.Empty;
        public string href { get; set; } = string.Empty;
    }
}
