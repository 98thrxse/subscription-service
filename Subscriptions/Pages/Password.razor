@page "/password"
@inject HttpClient Http
@inject ISnackbar SnackbarService

<PageTitle>@data?.title</PageTitle>

@for (int i = 1; i <= 2; i++)
{
    <MudAnimate Selector="@($"._fadeIn{i}")"
                Duration="1"
                AnimationType="AnimationType.Fade"
                Value="1"
                IterationCount="1"
                Delay="@(i * 0.25)"
                AnimationTiming="AnimationTiming.Ease"
                AnimationDirection="AnimationDirection.Normal"
                AnimationFillMode="AnimationFillMode.Forwards" />
}

<MudContainer Class="mb-8">
    <MudText Align="Align.Center" Class="_fadeIn1" Style="font-size: calc(2vw + 2vh); opacity: 0;" GutterBottom="true">@data?.title</MudText>
    
    @for(int i = 0; i < 9; i++)
    {
        <MudSkeleton Class="_fadeIn2" Style="background-color: rgba(255, 255, 255, .2); opacity: 0;" Animation="Animation.Wave" />
    }
</MudContainer>

@code {
    private Json? data;

    protected override async Task OnInitializedAsync()
    {
        data = await Http.GetFromJsonAsync<Json>("json/password.json");
        SnackbarService.Configuration.PositionClass = Defaults.Classes.Position.BottomRight;
        if (data != null)
        {
            SnackbarService.Add(data?.hint);
        }
    }

    public class Json
    {
        public string title { get; set; } = string.Empty;
        public string hint { get; set; } = string.Empty;
    }
}
